// <auto-generated />
using GraphQl_app.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraphQl_app.Migrations
{
    [DbContext(typeof(MyAppContext))]
    [Migration("20220212180237_ManyToManyEdit")]
    partial class ManyToManyEdit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GraphQl_app.Models.Abonnement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abonnements");
                });

            modelBuilder.Entity("GraphQl_app.Models.Adresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdresseMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdressePostale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Adresse");
                });

            modelBuilder.Entity("GraphQl_app.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("GraphQl_app.Models.ManyToMany.AbonnementClient", b =>
                {
                    b.Property<int>("AbonnementId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("AbonnementId", "ClientId");

                    b.HasIndex("ClientId");

                    b.ToTable("AbonnementClients");
                });

            modelBuilder.Entity("GraphQl_app.Models.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("GraphQl_app.Models.Adresse", b =>
                {
                    b.HasOne("GraphQl_app.Models.Client", "Client")
                        .WithMany("Adresses")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("GraphQl_app.Models.ManyToMany.AbonnementClient", b =>
                {
                    b.HasOne("GraphQl_app.Models.Abonnement", "Abonnement")
                        .WithMany("AbonnementClients")
                        .HasForeignKey("AbonnementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraphQl_app.Models.Client", "Client")
                        .WithMany("AbonnementClients")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Abonnement");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("GraphQl_app.Models.Abonnement", b =>
                {
                    b.Navigation("AbonnementClients");
                });

            modelBuilder.Entity("GraphQl_app.Models.Client", b =>
                {
                    b.Navigation("AbonnementClients");

                    b.Navigation("Adresses");
                });
#pragma warning restore 612, 618
        }
    }
}
